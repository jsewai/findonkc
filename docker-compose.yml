version: '3'

services:
  backend:
    build:
      context: ./backend
      args:
        DJANGO_ALLOWED_HOSTS: *
        DJANGO_SECRET_KEY: *
        DJANGO_ALLOWED_HOSTS: *
        DJANGO_CORS_ORIGIN_WHITELIST: *
    command: 
      gunicorn backend_django.wsgi --bind 0.0.0.0:8000
    ports:
      - "8000:8000"
    environment:
      - DB_HOST=*
      - DB_NAME=*
      - DB_USER=*
      - DB_PASS=*
    depends_on:
      - db

  db:
    image: postgres:10-alpine
    environment:
      - POSTGRES_DB=*
      - POSTGRES_USER=*
      - POSTGRES_PASSWORD=*

  frontend:
    build:
      context: ./frontend
      args:
        API_URL: *
    volumes:
      - build_folder:/frontend/build

  nginx:
    image: nginx:1.15-alpine
    ports:
      - 80:8080
      - 443:443
    volumes:
      - ./webserver/nginx-proxy.conf:/etc/nginx/conf.d/default.conf:ro
      - build_folder:/var/www/frontend
      - ./webserver/certbot/conf:/etc/letsencrypt
      - ./webserver/certbot/www:/var/www/certbot
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    depends_on:
      - backend
      - frontend
      
  certbot:
    image: certbot/certbot:v0.36.0
    volumes:
      - ./webserver/certbot/conf:/etc/letsencrypt
      - ./webserver/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  build_folder:
